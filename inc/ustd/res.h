/**
 * @file res.h
 * @author gabriel
 * @brief macros implementing the way to generate symbols related to the resources.
 * Ressources are embedded in the executable with a linker / whatever (in my case, `ld`) during the linking of the program, and the functionnality of the module is to translate symbols generated by the program into usable byte arrays.
 * @version 0.1
 * @date 2022-10-14
 *
 * @copyright Copyright (c) 2022
 *
 */

#ifndef UNSTANDARD_RES_H__
#define UNSTANDARD_RES_H__

/* code constants */
#define RES__SUFFIX_START _start
#define RES__SUFFIX_END   _end
#define RES__SUFFIX_SIZE  _size

/* ressources' linked name constants */
#define RES__B_PREFIX "_binary_"

#define DECLARE_RES_IMPL(BASE_SYMBOL_, str_identifier_, SUFFIX_START, SUFFIX_END, SUFFIX_SIZE, str_binary_prefix) \
extern const unsigned char BASE_SYMBOL_ ## SUFFIX_START [] __asm__(str_binary_prefix str_identifier_ #SUFFIX_START); \
extern const unsigned char BASE_SYMBOL_ ## SUFFIX_END   [] __asm__(str_binary_prefix str_identifier_ #SUFFIX_END); \
extern const size_t BASE_SYMBOL_ ## SUFFIX_SIZE __asm__(str_binary_prefix str_identifier_ #SUFFIX_SIZE);

#define  DECLARE_RES_RESOLVE(BASE_SYMBOL_, str_identifier_, SUFFIX_START, SUFFIX_END, SUFFIX_SIZE, str_binary_prefix) DECLARE_RES_IMPL(BASE_SYMBOL_, str_identifier_, SUFFIX_START, SUFFIX_END, SUFFIX_SIZE, str_binary_prefix)

/**
 * @brief Declares an embedded resource as a set of two symbols : the start of a byte array and its end.
 *  declares two symbols : `BASE_SYMBOL_'_start and `BASE_SYMBOL_'_end.
 *
 * @tparam BASE_SYMBOL_ the base symbol used for the generation of the two other symbols.
 * @tparam str_identifier_ the base string litteral used to alias real name symbols in the executable. This is typically the relative path + name (from compilation active directory) with every punctuation character replaced by `_' : "res/image.png" becomes "res_image_png".
 */
#define DECLARE_RES(BASE_SYMBOL_, str_identifier_) DECLARE_RES_RESOLVE(BASE_SYMBOL_, str_identifier_, RES__SUFFIX_START, RES__SUFFIX_END, RES__SUFFIX_SIZE, RES__B_PREFIX)

#endif
